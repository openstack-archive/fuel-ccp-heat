[DEFAULT]
debug = {{ heat.debug }}
use_syslog = False
use_stderr = True
use_forwarded_for = True
region_name_for_services = RegionOne
rpc_backend = rabbit
stack_domain_admin = {{ heat.domain.user }}
stack_domain_admin_password = {{ heat.domain.password }}
stack_user_domain_name = {{ heat.domain.name }}
heat_waitcondition_server_url = {{ address('heat-api-cfn', heat.api_cfn_port, external=True, with_scheme=True) }}/v1/waitcondition
heat_metadata_server_url = {{ address('heat-api-cfn', heat.api_cfn_port, external=True, with_scheme=True) }}


[clients]
endpoint_type = internalURL

[database]
connection = mysql+pymysql://{{ heat.db.username }}:{{ heat.db.password }}@{{ address(service.database) }}/{{ heat.db.name }}

[oslo_messaging_rabbit]
rabbit_userid = {{ rabbitmq.user }}
rabbit_password = {{ rabbitmq.password }}
rabbit_ha_queues = true
rabbit_hosts = rabbitmq

[keystone_authtoken]
auth_version = v3
auth_uri = {{ address('keystone', keystone.public_port, with_scheme=True) }}/v3
auth_url = {{ address('keystone', keystone.admin_port, with_scheme=True) }}/v3
auth_type = password
project_domain_id = default
user_domain_id = default
project_name = {{ openstack.project_name }}
username = {{ heat.user }}
password = {{ heat.password }}
memcached_servers = {{ address('memcached', memcached.port) }}

[trustee]
user_domain_id = default
password = {{ heat.password }}
username = {{ heat.user }}
auth_uri = {{ address('keystone', keystone.public_port, with_scheme=True) }}
auth_url = {{ address('keystone', keystone.admin_port, with_scheme=True) }}
auth_type = password

[clients_keystone]
auth_uri = {{ address('keystone', keystone.public_port, with_scheme=True) }}

[clients_heat]
endpoint_type = {{ heat.heat_endpoint_type }}

[heat_api]
bind_host = {{ network_topology["private"]["address"] }}
bind_port = {{ heat.api_port.cont }}

[heat_api_cfn]
bind_host = {{ network_topology["private"]["address"] }}
bind_port = {{ heat.api_cfn_port.cont }}


[cache]
backend = oslo_cache.memcache_pool
enabled = True
memcache_servers = {{ address('memcached', memcached.port) }}
